pipeline {
    agent {
        docker {
            image 'lachlanevenson/k8s-helm:latest'
            args '-v $HOME/.kube:/root/.kube'
        }
    }
    environment {
        NAMESPACE = 'db-replication'
        RELEASE   = 'mysql-replica'
        CHART     = 'bitnami/mysql'
    }
    stages {
        stage('Checkout') {
            steps { checkout scm }
        }
        stage('Create Namespace') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'DOCKER_HUB', usernameVariable: 'DUMMY', passwordVariable: 'KUBECONFIG')]) {
                    sh '''
                      echo "$KUBECONFIG" > kubeconfig
                      export KUBECONFIG=$(pwd)/kubeconfig
                      kubectl apply -f k8s/namespace.yaml
                    '''
                }
            }
        }
        stage('Deploy') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'DOCKER_HUB', usernameVariable: 'DUMMY', passwordVariable: 'KUBECONFIG')]) {
                    sh '''
                      echo "$KUBECONFIG" > kubeconfig
                      export KUBECONFIG=$(pwd)/kubeconfig
                      chmod +x k8s/helm-deploy.sh
                      bash k8s/helm-deploy.sh $KUBECONFIG ${NAMESPACE} ${RELEASE} ${CHART} k8s/mysql-values.yaml
                    '''
                }
            }
        }
        stage('Verify') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'DOCKER_HUB', usernameVariable: 'DUMMY', passwordVariable: 'KUBECONFIG')]) {
                    sh '''
                      echo "$KUBECONFIG" > kubeconfig
                      export KUBECONFIG=$(pwd)/kubeconfig
                      kubectl -n ${NAMESPACE} get pods,svc
                    '''
                }
            }
        }
    }
}
