pipeline {
    agent {
        docker {
            image 'dtzar/helm-kubectl:latest'
        }
    }
    environment {
        NAMESPACE = 'db-replication'
        RELEASE   = 'mysql-replica'
        CHART     = 'bitnami/mysql'
    }
    stages {
        stage('Checkout') {
            steps { checkout scm }
        }

        stage('Create Namespace') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'DOCKER_HUB', usernameVariable: 'DUMMY', passwordVariable: 'KUBECONFIG_CONTENT')]) {
                    writeFile file: 'kubeconfig.yaml', text: KUBECONFIG_CONTENT
                    sh 'kubectl --kubeconfig=kubeconfig.yaml apply -f k8s/namespace.yaml'
                }
            }
        }

        stage('Deploy') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'DOCKER_HUB', usernameVariable: 'DUMMY', passwordVariable: 'KUBECONFIG_CONTENT')]) {
                    writeFile file: 'kubeconfig.yaml', text: KUBECONFIG_CONTENT
                    sh 'chmod +x k8s/helm-deploy.sh'
                    sh "bash k8s/helm-deploy.sh kubeconfig.yaml ${NAMESPACE} ${RELEASE} ${CHART} k8s/mysql-values.yaml"
                }
            }
        }

        stage('Verify') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'DOCKER_HUB', usernameVariable: 'DUMMY', passwordVariable: 'KUBECONFIG_CONTENT')]) {
                    writeFile file: 'kubeconfig.yaml', text: KUBECONFIG_CONTENT
                    sh "kubectl --kubeconfig=kubeconfig.yaml -n ${NAMESPACE} get pods,svc"
                }
            }
        }
    }
}
